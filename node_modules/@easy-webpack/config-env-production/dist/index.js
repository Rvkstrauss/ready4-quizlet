"use strict";
var core_1 = require('@easy-webpack/core');
var webpack = require('webpack');
/**
 * Html loader advanced options
 * See: https://github.com/webpack/html-loader#advanced-options
 */
var DefaultHtmlLoaderOptions = {
    minimize: true,
    removeAttributeQuotes: false,
    caseSensitive: true,
};
module.exports = function production(_a) {
    var _b = _a === void 0 ? {} : _a, _c = _b.devtool, devtool = _c === void 0 ? 'source-map' : _c, _d = _b.dedupe, dedupe = _d === void 0 ? false : _d, _e = _b.htmlLoaderOptions, htmlLoaderOptions = _e === void 0 ? DefaultHtmlLoaderOptions : _e;
    var WebpackMd5Hash = require('webpack-md5-hash');
    return function production() {
        var config = {
            devtool: devtool,
            /**
             * Options affecting the output of the compilation.
             *
             * See: http://webpack.github.io/docs/configuration.html#output
             */
            output: {
                /**
                 * Specifies the name of each output file on disk.
                 * IMPORTANT: You must not specify an absolute path here!
                 *
                 * See: http://webpack.github.io/docs/configuration.html#output-filename
                 */
                filename: '[name].[chunkhash].bundle.js',
                /**
                 * The filename of the SourceMaps for the JavaScript files.
                 * They are inside the output.path directory.
                 *
                 * See: http://webpack.github.io/docs/configuration.html#output-sourcemapfilename
                 */
                sourceMapFilename: '[name].[chunkhash].bundle.map',
                /**
                 * The filename of non-entry chunks as relative path
                 * inside the output.path directory.
                 *
                 * See: http://webpack.github.io/docs/configuration.html#output-chunkfilename
                 */
                chunkFilename: '[id].[chunkhash].chunk.js'
            },
            plugins: [
                /**
                 * Plugin: WebpackMd5Hash
                 * Description: Plugin to replace a standard webpack chunkhash with md5.
                 *
                 * See: https://www.npmjs.com/package/webpack-md5-hash
                 */
                new WebpackMd5Hash(),
                /**
                 * Plugin: LoaderOptionsPlugin
                 * Description: Plugin to set loaders intro minimize mode
                 */
                new webpack.LoaderOptionsPlugin({
                    options: {
                        htmlLoader: htmlLoaderOptions
                    }
                }),
                new webpack.DefinePlugin({
                    '__DEV__': false,
                    'ENV': JSON.stringify(this.metadata.ENV),
                    'HMR': this.metadata.HMR,
                    'process.env': {
                        'ENV': JSON.stringify(this.metadata.ENV),
                        'NODE_ENV': JSON.stringify(this.metadata.ENV),
                        'HMR': this.metadata.HMR,
                    }
                })
            ].concat(core_1.get(this, 'plugins', [])),
        };
        if (dedupe) {
            console.error("Note: Dedupe plugin was deprecated by Webpack");
        }
        return config;
    };
};
//# sourceMappingURL=index.js.map